[{"diskText":"#Visual exploitation of data\n\nGoal: Data -> Knowledge  \nProblem: Data -> **?** -> Knowledge  \nSolution: Data -> **Message** -> Knowledge  \n\n###Why dataviz is useful ?\n\"Visual hardware\" has high capacity (we can \"sense\" a lot of visual information) but cognitive bandwidth is limited (we can't really process all the visual information that we sense).  \nMaybe that means that we need something to \"preprocess\" visual information.\n\n###Two different use cases\n2 main use cases to data exploitation : **data exploration** (the users *pull* the knowledge from the data, and data is the first use case) and **data explanation** (the messages *push* the knowledge from the data, and the message is the first use case).  \nData exploration is widely spread, however, a lot of dataviz seem to ignore their main use case. They just follow existing patterns because it's easy to replace data from an old template... so if we used a line chart to display last years sales, why should we change this year ? Even if the message that you should get from this data is completely different... In a lot of cases, data explanation is however more relevant.  \nJust like web design 15 years ago, dataviz design needs its own \"revolution\" **from being data-driven to becoming user-driven.**\n\n###A broad range of solutions\nAt a very high level, there is a lot of different ways to visually exploit data... from an interactive charts system to a video, solutions are spread on a range between pull and push approaches.  \nInteractive slideshow (a series of slides = push, where the user can make stops to explore in more details = pull) is an interesting solution because it allows:\n- a \"natural dialogue\" between the reader and the system\n- to follow a clear path\n- the reader to react when it makes sense for him\n\nInteractive slideshow = series of messages = a story.\n\n###Structure of a story\nTake care: This is a way to abstract among other ones. This is not the only way to describe elements of dataviz, and I chose this one only because it helps to point out the most important elements. If you work on the technical part of a dataviz, other elements might be more important (like dimensions of a characteristic for instance).\n\nA *Story* is a series of *Messages*, each of them applying a *Study* about a specific *Topic* to a specific *Subject*, and for which we'll pick some *Characteristics* in terms of *Value*.\n\nWhich means:  \n- Story  \n  - Message  \n    - Study\n    - Topic\n    - Subject  \n      - Characteristics  \n        - Value  \n          - Label\n          - Quantity\n          - Unit\n\nExample:\nTODO: Put an image\n","text":"#Visual exploitation of data\n\nGoal: Data -> Knowledge  \nProblem: Data -> **?** -> Knowledge  \nSolution: Data -> **Message** -> Knowledge  \n\n###Why dataviz is useful ?\n\"Visual hardware\" has high capacity (we can \"sense\" a lot of visual information) but cognitive bandwidth is limited (we can't really process all the visual information that we sense).  \nMaybe that means that we need something to \"preprocess\" visual information.\n\n###Two different use cases\n2 main use cases to data exploitation : **data exploration** (the users *pull* the knowledge from the data, and data is the first use case) and **data explanation** (the messages *push* the knowledge from the data, and the message is the first use case).  \nData exploration is widely spread, however, a lot of dataviz seem to ignore their main use case. They just follow existing patterns because it's easy to replace data from an old template... so if we used a line chart to display last years sales, why should we change this year ? Even if the message that you should get from this data is completely different... In a lot of cases, data explanation is however more relevant.  \nJust like web design 15 years ago, dataviz design needs its own \"revolution\" **from being data-driven to becoming user-driven.**\n\n###A broad range of solutions\nAt a very high level, there is a lot of different ways to visually exploit data... from an interactive charts system to a video, solutions are spread on a range between pull and push approaches.  \nInteractive slideshow (a series of slides = push, where the user can make stops to explore in more details = pull) is an interesting solution because it allows:\n- a \"natural dialogue\" between the reader and the system\n- to follow a clear path\n- the reader to react when it makes sense for him\n\nInteractive slideshow = series of messages = a story.\n\n###Structure of a story\nTake care: This is a way to abstract among other ones. This is not the only way to describe elements of dataviz, and I chose this one only because it helps to point out the most important elements. If you work on the technical part of a dataviz, other elements might be more important (like dimensions of a characteristic for instance).\n\nA *Story* is a series of *Messages*, each of them applying a *Study* about a specific *Topic* to a specific *Subject*, and for which we'll pick some *Characteristics* in terms of *Value*.\n\nWhich means:  \n- Story  \n  - Message  \n    - Study\n    - Topic\n    - Subject  \n      - Characteristics  \n        - Value  \n          - Label\n          - Quantity\n          - Unit\n\nExample:\nTODO: Put an image\n","active":false,"path":"/Users/julien/Dropbox/data-exploitation.md","scroll":13.525925925925925,"cursor":{"row":23,"column":0}},{"diskText":"","text":"- Faire un doc sur les risques de l'intégration v1 et alternative\n\n- PB 1 : Manque d'incentive à la consultation des GA depuis Ve (contrairement à qunb)\n- PB 2 : Obstacles importants à l'utilisation de GA sur Ve (besoin des GA access du compte en question sur le compte Google déjà connecté, compliqué de gérer les multi comptes,...)\n- PB 3 : Effort pour un produit qui ne sera sûrement pas amené à être le plus optimal... pourquoi s'imposer un héritage là où l'on pourrait commencer les choses proprement ?","active":true,"scroll":1.357142857142857,"cursor":{"row":4,"column":173}},{"diskText":"doubleMe x = x + x\n\ndoubleUs x y = doubleMe x + doubleMe y\n\ndoubleSmallNumber x = if x > 100\n                    then x\n                    else doubleMe x\n\ndoubleSmallNumber' x = (if x > 100 then x else doubleMe x) + 1\n","text":"doubleMe x = x + x\n\ndoubleUs x y = doubleMe x + doubleMe y\n\ndoubleSmallNumber x = if x > 100\n                    then x\n                    else doubleMe x\n\ndoubleSmallNumber' x = (if x > 100 then x else doubleMe x) + 1\n","active":false,"path":"/Users/julien/perso/hs/baby.hs","scroll":1.9,"cursor":{"row":8,"column":0}}]